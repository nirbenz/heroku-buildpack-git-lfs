#!/bin/bash

# Usage: bin/compile BUILD_DIR CACHE_DIR ENV_DIR

set -e
set -o pipefail

build_dir="$1"
env_dir="$3"

function die {
    echo "$@" >&2
    exit 1
}

function indent {
    sed -u 's/^/       /'
}

if [[ -f "$env_dir/BUILDPACK_GIT_LFS_REPO" ]]; then
    repo="$(< "$env_dir/BUILDPACK_GIT_LFS_REPO")"
elif [[ -f "$env_dir/HEROKU_BUILDPACK_GIT_LFS_REPO" ]]; then
    repo="$(< "$env_dir/HEROKU_BUILDPACK_GIT_LFS_REPO")"
else
    die "Env var BUILDPACK_GIT_LFS_REPO is not set"
fi

if [[ -f "$env_dir/HEROKU_TEST_RUN_COMMIT_VERSION" ]]; then
    CI_SOURCE_VERSION="$(< "$env_dir/HEROKU_TEST_RUN_COMMIT_VERSION")"
fi

GITLFS_VERSION="v3.3.0"

echo "-----> git sources used: ${SOURCE_VERSION:-$CI_SOURCE_VERSION}"
echo "-----> git repo used: ${repo}"
echo "-----> Install Git LFS Version ${GITLFS_VERSION}"
(
    pushd /tmp
    wget https://github.com/git-lfs/git-lfs/releases/download/${GITLFS_VERSION}/git-lfs-linux-amd64-${GITLFS_VERSION}.tar.gz \
         -O git-lfs.tar.gz 
    tar -xvf /tmp/git-lfs.tar.gz --strip-components=1
    popd

) | indent

echo "-----> Download Git LFS assets"
(
    pushd "$build_dir"

    mkdir -p .heroku/bin
    mv /tmp/git-lfs .heroku/bin/

    mkdir -p .profile.d
    cat <<"EOF" > .profile.d/heroku-buildpack-git-lfs.sh
export PATH="$HOME/.heroku/bin:$PATH"
EOF
    export PATH="$build_dir/.heroku/bin:$PATH"

    git version
    git-lfs version

    git init
    git remote add origin "$repo"
    git fetch origin
    git reset --mixed "${SOURCE_VERSION:-$CI_SOURCE_VERSION}"
    git lfs install
    git lfs pull
    rm -rf .git

) | indent
